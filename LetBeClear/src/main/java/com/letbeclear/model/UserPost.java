package com.letbeclear.model;
// Generated Feb 12, 2018 12:30:31 PM by Hibernate Tools 5.1.0.Alpha1

import java.math.BigDecimal;
import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * UserPost generated by hbm2java
 */
@Entity
@Table(name = "user_post", catalog = "letbeclear")
public class UserPost implements java.io.Serializable {

	private Long postId;
	private Users users;
	private String imagePath;
	private String primaryImage;
	private String postTitle;
	private Integer noOfImage;
	private String description;
	private BigDecimal latitude;
	private BigDecimal longitude;
	private Date postTime;
	private String field1;
	private Integer field2;
	private Date field3;
	private Set<PostComment> postComments = new HashSet<PostComment>(0);
	private Set<PostLike> postLikes = new HashSet<PostLike>(0);

	public UserPost() {
	}

	public UserPost(Users users, Date postTime, Date field3) {
		this.users = users;
		this.postTime = postTime;
		this.field3 = field3;
	}

	public UserPost(Users users, String imagePath, String primaryImage, String postTitle, Integer noOfImage,
			String description, BigDecimal latitude, BigDecimal longitude, Date postTime, String field1, Integer field2,
			Date field3, Set<PostComment> postComments, Set<PostLike> postLikes) {
		this.users = users;
		this.imagePath = imagePath;
		this.primaryImage = primaryImage;
		this.postTitle = postTitle;
		this.noOfImage = noOfImage;
		this.description = description;
		this.latitude = latitude;
		this.longitude = longitude;
		this.postTime = postTime;
		this.field1 = field1;
		this.field2 = field2;
		this.field3 = field3;
		this.postComments = postComments;
		this.postLikes = postLikes;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "POST_ID", unique = true, nullable = false)
	public Long getPostId() {
		return this.postId;
	}

	public void setPostId(Long postId) {
		this.postId = postId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "USER_ID", nullable = false)
	public Users getUsers() {
		return this.users;
	}

	public void setUsers(Users users) {
		this.users = users;
	}

	@Column(name = "IMAGE_PATH", length = 512)
	public String getImagePath() {
		return this.imagePath;
	}

	public void setImagePath(String imagePath) {
		this.imagePath = imagePath;
	}

	@Column(name = "PRIMARY_IMAGE", length = 512)
	public String getPrimaryImage() {
		return this.primaryImage;
	}

	public void setPrimaryImage(String primaryImage) {
		this.primaryImage = primaryImage;
	}

	@Column(name = "POST_TITLE", length = 100)
	public String getPostTitle() {
		return this.postTitle;
	}

	public void setPostTitle(String postTitle) {
		this.postTitle = postTitle;
	}

	@Column(name = "NO_OF_IMAGE")
	public Integer getNoOfImage() {
		return this.noOfImage;
	}

	public void setNoOfImage(Integer noOfImage) {
		this.noOfImage = noOfImage;
	}

	@Column(name = "DESCRIPTION", length = 512)
	public String getDescription() {
		return this.description;
	}

	public void setDescription(String description) {
		this.description = description;
	}

	@Column(name = "LATITUDE", precision = 10, scale = 8)
	public BigDecimal getLatitude() {
		return this.latitude;
	}

	public void setLatitude(BigDecimal latitude) {
		this.latitude = latitude;
	}

	@Column(name = "LONGITUDE", precision = 11, scale = 8)
	public BigDecimal getLongitude() {
		return this.longitude;
	}

	public void setLongitude(BigDecimal longitude) {
		this.longitude = longitude;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "POST_TIME", nullable = false, length = 19)
	public Date getPostTime() {
		return this.postTime;
	}

	public void setPostTime(Date postTime) {
		this.postTime = postTime;
	}

	@Column(name = "FIELD1", length = 512)
	public String getField1() {
		return this.field1;
	}

	public void setField1(String field1) {
		this.field1 = field1;
	}

	@Column(name = "FIELD2")
	public Integer getField2() {
		return this.field2;
	}

	public void setField2(Integer field2) {
		this.field2 = field2;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "FIELD3", nullable = false, length = 19)
	public Date getField3() {
		return this.field3;
	}

	public void setField3(Date field3) {
		this.field3 = field3;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "userPost")
	public Set<PostComment> getPostComments() {
		return this.postComments;
	}

	public void setPostComments(Set<PostComment> postComments) {
		this.postComments = postComments;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "userPost")
	public Set<PostLike> getPostLikes() {
		return this.postLikes;
	}

	public void setPostLikes(Set<PostLike> postLikes) {
		this.postLikes = postLikes;
	}

}
